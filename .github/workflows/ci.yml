on:
  push:
    branches:
    - main
    paths-ignore:
    - 'docs/**'
  pull_request:
    paths-ignore:
    - 'docs/**'

name: CI

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '(cargo-release)')"
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.10.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: Swatinem/rust-cache@v2

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  lints:
    name: Lints
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '(cargo-release)')"
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.10.1
        with:
          access_token: ${{ github.token }}
          
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy
          
      - uses: Swatinem/rust-cache@v2

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          # Set linting rules for clippy
          args: --all-targets --all-features -- -D warnings 

  test-plan:
    name: Test Suite
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    outputs:
      matrix: ${{ steps.docker-prep.outputs.matrix }}
    if: "!contains(github.event.head_commit.message, '(cargo-release)')"
    steps:      
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.10.1
        with:
          access_token: ${{ github.token }}
        
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: Swatinem/rust-cache@v2
      
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --package nixpacks --lib --test generate_plan_tests
      - name: List docker tests (prep test-docker)
        id: docker-prep
        if: matrix.os == 'ubuntu-latest'
        # generate list of tests in json format for test-docker
        run: |
          echo "::set-output name=matrix::{\"tests\":[\"$(cargo test -q --package nixpacks --test docker_run_tests -- --list --format=terse | sed -z 's/: test\n/\", \"/g' | sed 's/...$//')]}"

  test-docker:
    needs: test-plan
    name: Docker Tests
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.test-plan.outputs.matrix)}}
    if: "!contains(github.event.head_commit.message, '(cargo-release)')"
    steps:      
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.10.1
        with:
          access_token: ${{ github.token }}
        
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: Swatinem/rust-cache@v2

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --package nixpacks --test docker_run_tests -- ${{ matrix.tests }} --exact

  test-podman:
    needs: test-plan
    name: Podman Tests
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.test-plan.outputs.matrix)}}
    if: "!contains(github.event.head_commit.message, '(cargo-release)')"
    steps:      
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.10.1
        with:
          access_token: ${{ github.token }}
        
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: Swatinem/rust-cache@v2

      - name: Install Podman
        run: |
            mkdir -p /etc/apt/keyrings
            curl -fsSL https://download.opensuse.org/repositories/devel:kubic:libcontainers:unstable/xUbuntu_$(lsb_release -rs)/Release.key | gpg --dearmor | tee /etc/apt/keyrings/devel_kubic_libcontainers_unstable.gpg > /dev/null
            echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/devel_kubic_libcontainers_unstable.gpg]\
            https://download.opensuse.org/repositories/devel:kubic:libcontainers:unstable/xUbuntu_$(lsb_release -rs)/ /" | tee /etc/apt/sources.list.d/devel:kubic:libcontainers:unstable.list > /dev/null
            apt-get update -qq
            apt-get -qq -y install podman

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --package nixpacks --test docker_run_tests -- ${{ matrix.tests }} --exact

  msrv:
    name: Test Suite (MSRV)
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '(cargo-release)')"
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.10.1
        with:
          access_token: ${{ github.token }}
        
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install 1.57 rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.57
          override: true

      - uses: Swatinem/rust-cache@v2
      
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --package nixpacks --lib --test generate_plan_tests
